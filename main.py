import telebot
from telebot import types
import os
import random
import time

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ –∑ —Ç–æ–∫–µ–Ω–æ–º
TOKEN = "7917914353:AAHwAoyDh9PbRlayBedZnCvSQcP43NdL_qE"
bot = telebot.TeleBot(TOKEN)

ADMIN_USER_ID = 6151460786
GROUP_ID = "@darkbotgroup"
user_feedback_data = {}
last_file_time = {}
FILE_COOLDOWN = 14400  # 24 –≥–æ–¥–∏–Ω–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

# –°–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–µ–π –¥–ª—è –∫–Ω–æ–ø–æ–∫
articles = [
    "–†–µ—Ñ–∞—É–Ω–¥", "–ê—Ä–±–∏—Ç—Ä–∞–∂", "–î–æ–∫—É–º–µ–Ω—Ç—ã", "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞",
    "–¢—Ä–µ–π–¥–∏–Ω–≥", "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏", "–ú–æ—Ç–∏–≤–∞—Ü–∏—è", "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
    "–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç", "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", "UI/UX", "–§—Ä–∏–ª–∞–Ω—Å"
]

# –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
BUTTONS_PER_PAGE = 4


@bot.message_handler(commands=['start'])
def send_welcome(message):
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

    btn_articles = types.KeyboardButton("\ud83d\udcda –°—Ç–∞—Ç—å–∏ –∏ —Ä–µ—Å—É—Ä—Å—ã")

    btn_about = types.KeyboardButton("\u2139\ufe0f –û –±–æ—Ç–µ")
    btn_feedback = types.KeyboardButton("\u2709\ufe0f –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")


    # –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –¥–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
    keyboard.add(btn_articles)
    keyboard.add(btn_about)
    keyboard.add(btn_feedback)

    # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    bot.send_message(
        message.chat.id,
        """üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø –±–æ—Ç *TrueDarkBot*, —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ –∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–∞–º–æ–π –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏! –í–æ—Ç —á—Ç–æ —è –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:

üîç *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Ñ–∞—É–Ω–¥–µ* ‚Äî –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.
üìú *–§–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤* –∏ —à–∞–±–ª–æ–Ω—ã –¥–ª—è –≤–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞.
üì∞ *–°–ª–∏—Ç—ã–µ —Å—Ç–∞—Ç—å–∏* –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.
ü§ñ *–ù–µ–π—Ä–æ—Å–µ—Ç–∏* ‚Äî —Å–∞–º—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ.
üåê *–°–∞–π—Ç—ã* –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∏ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á.
üíº *–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞—Ä–∞–±–æ—Ç–∫–∞:* –∞—Ä–±–∏—Ç—Ä–∞–∂, –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞, –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.

‚ö†Ô∏è *–í–°–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –ë–´–õ–ê –í–ó–Ø–¢–ê –ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –ò–ó –û–¢–ö–†–´–¢–´–• –ò–°–¢–û–ß–ù–ò–ö–û–í!*

–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º! üöÄ""",parse_mode='Markdown',
        reply_markup=keyboard
    )


@bot.message_handler(func=lambda message: message.text == "üìö –°—Ç–∞—Ç—å–∏ –∏ —Ä–µ—Å—É—Ä—Å—ã")
def send_articles(message, page=0):
    start_index = page * BUTTONS_PER_PAGE
    end_index = start_index + BUTTONS_PER_PAGE

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Å—Ç–∞—Ç–µ–π
    inline_keyboard = types.InlineKeyboardMarkup()
    for article in articles[start_index:end_index]:
        inline_keyboard.add(types.InlineKeyboardButton(article, callback_data=f"article_{article}"))

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
    nav_buttons = []
    if page > 0:
        nav_buttons.append(types.InlineKeyboardButton("‚¨ÖÔ∏è –í–ª–µ–≤–æ", callback_data=f"prev_{page - 1}"))
    if end_index < len(articles):
        nav_buttons.append(types.InlineKeyboardButton("–í–ø—Ä–∞–≤–æ ‚û°Ô∏è", callback_data=f"next_{page + 1}"))
    if nav_buttons:
        inline_keyboard.row(*nav_buttons)

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—å—é:", reply_markup=inline_keyboard)


@bot.callback_query_handler(func=lambda call: call.data.startswith("prev_") or call.data.startswith("next_"))
def navigate_articles(call):
    page = int(call.data.split("_")[1])
    start_index = page * BUTTONS_PER_PAGE
    end_index = start_index + BUTTONS_PER_PAGE

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Å—Ç–∞—Ç–µ–π
    inline_keyboard = types.InlineKeyboardMarkup()
    for article in articles[start_index:end_index]:
        inline_keyboard.add(types.InlineKeyboardButton(article, callback_data=f"article_{article}"))

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
    nav_buttons = []
    if page > 0:
        nav_buttons.append(types.InlineKeyboardButton("‚¨ÖÔ∏è –í–ª–µ–≤–æ", callback_data=f"prev_{page - 1}"))
    if end_index < len(articles):
        nav_buttons.append(types.InlineKeyboardButton("–í–ø—Ä–∞–≤–æ ‚û°Ô∏è", callback_data=f"next_{page + 1}"))
    if nav_buttons:
        inline_keyboard.row(*nav_buttons)

    bot.edit_message_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—å—é:",
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        reply_markup=inline_keyboard
    )


@bot.callback_query_handler(func=lambda call: call.data.startswith("article_"))
def show_article_details(call):
    article_name = call.data.split("_", 1)[1]
    if article_name == "–†–µ—Ñ–∞—É–Ω–¥":
        check_and_send_file(call.message.chat.id, "refund")
    elif article_name == "–î–æ–∫—É–º–µ–Ω—Ç—ã":
        send_random_folder_images(call.message.chat.id, "passports")
    else:
        bot.send_message(call.message.chat.id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—Ç–∞—Ç—å—é: {article_name}")


@bot.message_handler(func=lambda message: message.text == "\u2709\ufe0f –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
def feedback_request(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏:")
    bot.register_next_step_handler(message, send_feedback_to_admin)


def send_feedback_to_admin(message):
    user_feedback = message.text
    user_feedback_data[message.chat.id] = user_feedback

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
    reply_keyboard = types.InlineKeyboardMarkup()
    reply_button = types.InlineKeyboardButton("–û—Ç–≤–µ—Ç–∏—Ç—å", callback_data=f"reply_{message.chat.id}")
    reply_keyboard.add(reply_button)

    bot.send_message(ADMIN_USER_ID, f"–ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.chat.id}:\n{user_feedback}",
                     reply_markup=reply_keyboard)
    bot.send_message(message.chat.id, "–í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –°–ø–∞—Å–∏–±–æ!")


@bot.callback_query_handler(func=lambda call: call.data.startswith("reply_"))
def handle_reply_button(call):
    user_id = int(call.data.split("_")[1])
    bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç:")
    bot.register_next_step_handler(call.message, send_reply_to_user, user_id)


def send_reply_to_user(message, user_id):
    admin_reply = message.text
    bot.send_message(user_id, f"–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n{admin_reply}")
    bot.send_message(message.chat.id, "–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")


def check_and_send_file(chat_id, folder_name):
    if not is_user_subscribed(chat_id):
        bot.send_message(chat_id, f"–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª–∞–º, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –≥—Ä—É–ø–ø—É: {GROUP_ID}")
        return

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    try:
        member_status = bot.get_chat_member(GROUP_ID, chat_id).status
        if member_status in ["administrator", "creator"]:
            is_admin = True
        else:
            is_admin = False
    except Exception as e:
        print(f"Error checking admin status: {e}")
        is_admin = False

    # –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ –æ–±—Ö–æ–¥—è—Ç—å –∫—É–ª–¥–∞—É–Ω
    if not is_admin:
        current_time = time.time()
        last_time = last_file_time.get(chat_id, 0)

        if current_time - last_time < FILE_COOLDOWN:
            remaining_time = FILE_COOLDOWN - (current_time - last_time)
            bot.send_message(chat_id, f"–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Ñ–∞–π–ª —á–µ—Ä–µ–∑ {int(remaining_time // 60)} –º–∏–Ω—É—Ç.")
            return

        last_file_time[chat_id] = current_time

    # –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Ñ–∞–π–ª—É
    folder_path = os.path.join(os.getcwd(), folder_name)
    if os.path.exists(folder_path) and os.path.isdir(folder_path):
        files = [f for f in os.listdir(folder_path) if f.endswith(".pdf") or f.endswith(".docx")]
        if files:
            random_file = random.choice(files)
            with open(os.path.join(folder_path, random_file), "rb") as file:
                bot.send_document(chat_id, file)
        else:
            bot.send_message(chat_id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ.")
    else:
        bot.send_message(chat_id, "–ü–∞–ø–∫–∞ —Å —Ñ–∞–π–ª–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")



def is_user_subscribed(chat_id):
    try:
        member_status = bot.get_chat_member(GROUP_ID, chat_id).status
        return member_status in ["member", "administrator", "creator"]
    except Exception as e:
        print(f"Error checking subscription: {e}")
        return False

def send_random_folder_images(chat_id, base_folder):
    if not is_user_subscribed(chat_id):
        bot.send_message(
            chat_id,
            "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à—É –≥—Ä—É–ø–ø—É! –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ñ–æ—Ç–æ. üöÄ",
        )
        return

    base_path = os.path.join(os.getcwd(), base_folder)

    if os.path.exists(base_path) and os.path.isdir(base_path):
        # –°–ø–∏—Å–æ–∫ –ø—ñ–¥–ø–∞–ø–æ–∫
        subfolders = [
            os.path.join(base_path, f)
            for f in os.listdir(base_path)
            if os.path.isdir(os.path.join(base_path, f))
        ]

        # –°–ø–∏—Å–æ–∫ –∑–æ–±—Ä–∞–∂–µ–Ω—å —É –ø—ñ–¥–ø–∞–ø–∫–∞—Ö
        folder_images = []
        for folder in subfolders:
            images = [
                os.path.join(folder, f)
                for f in os.listdir(folder)
                if f.endswith((".jpg", ".png", ".jpeg"))
            ]
            folder_images.extend(images)

        # –°–ø–∏—Å–æ–∫ –∑–æ–±—Ä–∞–∂–µ–Ω—å –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –≤ –æ—Å–Ω–æ–≤–Ω—ñ–π –ø–∞–ø—Ü—ñ
        base_images = [
            os.path.join(base_path, f)
            for f in os.listdir(base_path)
            if f.endswith((".jpg", ".png", ".jpeg"))
        ]

        # –û–±'—î–¥–Ω—É—î–º–æ –≤—Å—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ –æ–±–∏—Ä–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–µ –∑ —Ä—ñ–≤–Ω–∏–º–∏ —à–∞–Ω—Å–∞–º–∏
        all_images = folder_images + base_images
        if all_images:
            random_image = random.choice(all_images)
            with open(random_image, "rb") as img:
                bot.send_message(chat_id, "–í–æ—Ç, –¥–µ—Ä–∂–∏ —Ñ–æ—Ç–æ:")
                bot.send_photo(chat_id, img)
        else:
            bot.send_message(chat_id, "–í –ø–∞–ø–∫–µ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    else:
        bot.send_message(chat_id, "–ü–∞–ø–∫–∞ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")


@bot.message_handler(func=lambda message: message.text == "‚ÑπÔ∏è –û –±–æ—Ç–µ")
def send_articles(message):
    bot.send_message(
        message.chat.id,
        """
üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø –±–æ—Ç *TrueDarkBot* ‚Äî –≤–∞—à –≥–∏–¥ –≤ –º–∏—Ä–µ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π. –ú–æ—è –º–∏—Å—Å–∏—è ‚Äî –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º —Ä–∞—Å—à–∏—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –∏ –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã. –î–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è –ø–æ–±–ª–∏–∂–µ!

*–ß—Ç–æ —è –ø—Ä–µ–¥–ª–∞–≥–∞—é?*

*üîç –†–µ—Ñ–∞—É–Ω–¥*
–Ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Ç–µ–º–µ —Ä–µ—Ñ–∞—É–Ω–¥–∞:

    ‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–æ–Ω—è—Ç–∏–π –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤.
    ‚Ä¢ –ë–∞–∑–æ–≤–∞—è —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—è, —á—Ç–æ–±—ã –¥–∞–∂–µ –Ω–æ–≤–∏—á–∫–∏ –º–æ–≥–ª–∏ –ø–æ–Ω—è—Ç—å, –æ —á–µ–º –∏–¥–µ—Ç —Ä–µ—á—å.
    ‚Ä¢ –ü–æ–¥–±–æ—Ä–∫–∞ –ø–æ–ª–µ–∑–Ω—ã—Ö —Å–∞–π—Ç–æ–≤ –∏ —Ä–µ—Å—É—Ä—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è.
    ‚Ä¢ –ó–ª–∏—Ç—ã–µ —Ç–∞–±–ª–∏—Ü—ã —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–∞–≥–∞–∑–∏–Ω–∞—Ö, –ø–æ–ª–∏—Ç–∏–∫–µ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤ –∏ –ª–∞–π—Ñ—Ö–∞–∫–∞—Ö.
        
*üìú –î–æ–∫—É–º–µ–Ω—Ç—ã*
–í –º–æ–µ–º –∞—Ä—Ö–∏–≤–µ —Å–æ–±—Ä–∞–Ω–æ –±–æ–ª–µ–µ 1000+ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–∞—Å–ø–æ—Ä—Ç–æ–≤, –≤–∫–ª—é—á–∞—è:

    ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç—ã –∏–Ω–æ—Å—Ç—Ä–∞–Ω—Ü–µ–≤.
    ‚Ä¢ –ü–∞—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω –°–ù–ì.
    ‚Ä¢ –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞, –æ–±—É—á–µ–Ω–∏—è –∏–ª–∏ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.

*üì∞ –°–ª–∏—Ç—ã–µ —Å—Ç–∞—Ç—å–∏*
–°–æ–±—Ä–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç –Ω–æ–≤—ã–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã:

    ‚Ä¢ –£–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ –∑–∞—Ä–∞–±–æ—Ç–æ–∫.
    ‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–∞—Ö —Å–∫–∞–º–∞ (–≤ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª—è—Ö).
    ‚Ä¢ –û—Å–Ω–æ–≤—ã –∏ –ø—Ä–∏–º–µ—Ä—ã —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ.
    ‚Ä¢ –†–µ–¥–∫–∏–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–¥–∫–æ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –¥–æ—Å—Ç—É–ø–µ.

*ü§ñ –ù–µ–π—Ä–æ—Å–µ—Ç–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã*
–Ø —Ä–∞—Å—Å–∫–∞–∂—É –æ —Å–∞–º—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∏ –ø–æ–ª–µ–∑–Ω—ã—Ö –Ω–µ–π—Ä–æ—Å–µ—Ç—è—Ö:

    ‚Ä¢ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–∫—Å—Ç–∞–º–∏, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏, –¥–∞–Ω–Ω—ã–º–∏.
    ‚Ä¢ –ü–æ–ª–µ–∑–Ω—ã–µ —Å–∞–π—Ç—ã –¥–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞—á.
    ‚Ä¢ –õ—É—á—à–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–∞–≤—ã–∫–æ–≤ –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞.

*üíº –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞—Ä–∞–±–æ—Ç–∫–∞*
–Ø –ø–æ–º–æ–≥–∞—é –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –º–∏—Ä–µ –∑–∞—Ä–∞–±–æ—Ç–∫–∞:

    ‚Ä¢ –û–±–∑–æ—Ä –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π, —Ç–∞–∫–∏—Ö –∫–∞–∫ –∞—Ä–±–∏—Ç—Ä–∞–∂ –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞.
    ‚Ä¢ –ü–æ–ª–µ–∑–Ω—ã–µ –≥–∞–π–¥—ã –∏ —Å—Å—ã–ª–∫–∏, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –±—ã—Å—Ç—Ä–æ –Ω–∞—á–∞—Ç—å.

*‚ö†Ô∏è –í–°–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –ë–´–õ–ê –í–ó–Ø–¢–ê –ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –ò–ó –û–¢–ö–†–´–¢–´–• –ò–°–¢–û–ß–ù–ò–ö–û–í!*
–ú–æ—è —Ü–µ–ª—å ‚Äî –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Å–≤–æ–±–æ–¥–Ω–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏, –∏ –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç—å –≤–∞—Å –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ –∏–∑—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π.

–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å? üöÄ
        """, parse_mode='Markdown'
    )
@bot.message_handler(content_types=['text', 'photo', 'sticker', 'animation', 'video', 'document', 'audio', 'voice', 'location', 'contact', 'poll', 'dice', 'game', 'venue', 'video_note'])
def handle_unknown_message(message):
    bot.send_message(
        message.chat.id,
        "–£–ü–°... –Ø –æ —Ç–∞–∫–æ–º –µ—â–µ –Ω–µ –∑–Ω–∞–ª, –Ω—É–∂–Ω–æ –ø–æ–∏—Å–∫–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ ü§î"
    )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
